//2151753 彭坤宇 计科
#include <iostream>
#include <iomanip>
#include <cmath> 
#include<cstdio>
using namespace std;

/* ----具体要求----
   1、不允许添加其它头文件
   2、不允许定义全局变量、静态局部变量
   3、不允许添加其它函数
   4、整个程序不允许出现任何形式的循环
   ---------------------------------------------------------------------
*/

/***************************************************************************
  函数名称：
  功    能：给定x，返回函数 y=2x^3-9x^2+12-3的值
  输入参数：
  返 回 值：
  说    明：f函数不准动
***************************************************************************/
double f(double x)
{
	return (2 * x * x * x - 9 * x * x + 12 * x - 3);
}

/***************************************************************************
  函数名称：
  功    能：递归方式求方程 y=2x^3-9x^2+12x-3 在[x1-x2]区间的根并打印
  输入参数：
  返 回 值：
  说    明：1、函数名、形参、返回类型均不准动
			2、不允许出现任何形式的循环
			3、输出保留小数点后3位
			4、思考：为什么不定义函数返回类型为double，然后在main中打印方程的根？（本问题的思考答案，以多行注释形式写在源程序的最后，分数占本题20%）
***************************************************************************/
void fun(double x1, double x2)
{
	double half, y;
	half = (x1 + x2) / 2;
	y = f(half);
	if (fabs(y) < 1e-6) {
		cout<<fixed<<setprecision(3)<<half<<endl;
	}
	else {
		if (y > 0) {
			fun(x1, half);
		}
		else {
			fun(half, x2);
		}
	}
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：main函数不准动
***************************************************************************/
int main()
{
	fun(0, 1);
	return 0;
}

/* --- 此处给出思考题的答案，如果能给出 double fun(double x1, double x2) 形式的实现，也可以贴在注释中 ---
* 给出解释：函数具有返回类型时可能会存在空间的占用，而深层次递归时会造成空间的浪费，采用void型可以不占用额外的空间、
* 返回类型为double的代码
double fun(double x1, double x2)
{
	double half, y;
	half = (x1 + x2) / 2;
	y = f(half);
	if (fabs(y) < 1e-6) {
		return half;
	}
	else {
		if (y > 0) {
			return fun(x1, half);
		}
		else {
			return fun(half, x2);
		}
	}
}
int main()
{
cout << "x=" <<fixed<< setprecision(3) << fun(0, 1) << endl;
return 0;
}
*/
